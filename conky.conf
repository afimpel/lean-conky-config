-- vim: ft=lua:ts=4:sw=4:et:ai:cin

-- NOTE: Do NOT modify this file for local customization. Instead, create a
--       `local.conf` file from `local.conf.example` and make changes there.

local _dirname_ = debug.getinfo(1, "S").source:sub(2):match("(.*[/\\])")

conky.config = {
    alignment = "middle_right",
    background = true,
    border_inner_margin = 3,
    border_outer_margin = 0,
    border_width = 1,
    cpu_avg_samples = 2,
    default_color = "white",
    default_outline_color = "#000",
    default_shade_color = "#000",
    diskio_avg_samples = 2,
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = true,
    draw_shades = false,
    extra_newline = false,
    font = "sans-serif:normal:size=7",
    gap_x = 10,
    gap_y = 0,
    lua_load = _dirname_ .. "main.lua",
    maximum_width = 320,
    minimum_height = 240,
    minimum_width = 320,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_stderr = false,
    override_utf8_locale = true,
    own_window = true,
    own_window_argb_value = 12,
    own_window_argb_visual = true,
    own_window_class = "Conky",
    own_window_hints = "undecorated,below,sticky,skip_taskbar,skip_pager",
    own_window_transparent = false,
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1,
    uppercase = false,
    use_spacer = "none",
    use_xft = true,
    xinerama_head = 1,
    -- COLORS --
    color0 = "white", -- clock color
    color1 = "silver", -- heading 1 color
    color2 = "white", -- heading 2 color
    color3 = "lightgray", -- chart color
	color4 = "red",
	color5 = "green",
    -- TEMPLATES --
    -- section heading
    template0 = "${color1}${voffset -2}${lua font icon {\\2 ${voffset -1}} {}}${lua font h1 {\\1}} ${hr 1}${color}${voffset 0}"
}

conky.text =
    [[${color0}${voffset 2}${lua font date ${time %b %-d}}${alignr}#
${lua font time ${time %H:%M}${voffset -30} ${time %H:%M}${voffset -40} time_alt}
${color}${alignc}${lua font week ${time %^A}}
${alignc}${lua font year ${time %Y}}
${template0 SYSTEM }
${font}${sysname} ${kernel} ${alignr}${color0}${machine}
${color}Hostname:${alignr}${color0}${nodename}
${color}Uptime:${alignr}${color0}${uptime}
${color}Processes:${alignr}${color0}${running_processes} / ${processes}
${color}Desktop:${alignc}${desktop_name}${alignr}${color0} ${desktop} / ${desktop_number}
${color}Volume:${alignr}${color0}${execpi 500 pactl list sinks | grep "Volume" | grep "front" | cut -d '/' -f4 }
${color}Battery:${alignc}${battery_time BAT0}${alignr}${color0} ${battery BAT0}

${template0 CPU }
${font}${execi 3600 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\s//'} ${alignr}${lua font h2 {T: ${color0}${acpitemp}°C}}${color}
${lua cpus_cores 6000}${color}
${color3}${cpugraph cpu0 24,320}${if_match ${desktop} == 1}
${voffset -6}${lua top_cpu_line header}
${lua top_cpu_line 1}
${lua top_cpu_line 2}
${lua top_cpu_line 3}
${lua top_cpu_line 4}
${lua top_cpu_line 5}
${endif}${if_match ${desktop} == 2}
${voffset -6}${lua top_cpu_line header}
${lua top_cpu_line 1}
${lua top_cpu_line 2}
${lua top_cpu_line 3}
${lua top_cpu_line 4}
${lua top_cpu_line 5}
${lua top_cpu_line 6}
${lua top_cpu_line 7}
${lua top_cpu_line 8}
${lua top_cpu_line 9}
${endif}
${template0 MEMORY }
${color2}${lua font h2 RAM}${font}${color} ${alignc -16}${mem} / ${memmax} ${alignr}${memperc}%
${color3}${membar 4}${color}
${color2}${lua font h2 SWAP}${font}${color} ${alignc -16}${swap} / ${swapmax} ${alignr}${swapperc}%
${color3}${swapbar 4}${color}
${if_match ${desktop} == 1}${lua top_mem_line header}
${lua top_mem_line 1}
${lua top_mem_line 2}
${lua top_mem_line 3}
${lua top_mem_line 4}
${lua top_mem_line 5}
${endif}
${template0 STORAGE }
${color2}${lua font icon_s {} {}} ${font h2}${diskio_read} ${alignr}${font h2}${diskio_write} ${lua font icon_s {${voffset -4} } {}}
${voffset 2}${color3}${diskiograph_read 24,155} ${alignr}${diskiograph_write 24,155}${color}
${voffset -3}${lua disks 10}${if_match ${desktop} == 4}

${template0 NETWORK }
${lua ifaces 10}
${voffset 3}${color2}${lua font icon_s { } {}}${lua font h2 {External IP}}${alignr}${lua font h2 {Local IPs}}${lua font icon_s { } {}}${font}${color}
${texeci 3600  wget -q -O- https://ipecho.net/plain; echo}#
${alignr}${execi 60 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \/ -f1 | sed 's/[^0-9\.]*//g'}
${endif}]] -- hack: remove excessive space

-- font definitions
conky.fonts = {
    icon = "LeanConkyConfig:normal:size=12", -- icons
    icon_x = "LeanConkyConfig:normal:size=7", -- icons (xsmall)
    icon_s = "LeanConkyConfig:normal:size=9", -- icons (small)
    icon_l = "LeanConkyConfig:normal:size=14", -- icons (large)
    h1 = "sans-serif:bold:size=10", -- heading 1
    h2 = "sans-serif:bold:size=8", -- heading 2
    h6 = "sans-serif:normal:size=6", -- heading 6
    date = "sans-serif:normal:size=18", -- date
    week = "sans-serif:bold:size=7", -- week
    year = "sans-serif:normal:size=7", -- year
    time = "LeanConkyConfig:normal:size=18", -- time
    time_alt = "sans-serif:bold:size=18" -- time (fallback)
}

-- process local config
local function _load_local_config()
    dofile(_dirname_ .. "local.conf")
end

if pcall(_load_local_config) then
    if local_config then
        for k, v in pairs(local_config) do
            conky.config[k] = v
        end
    end
    if local_fonts then
        for k, v in pairs(local_fonts) do
            conky.fonts[k] = v
        end
    end
end
